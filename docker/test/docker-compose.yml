networks:
  frontend:
  backend:
services:
  redis:
    image: "redis:6.2.6-alpine"
    networks:
      - backend

  solr:
    image: "solr:8.11.1"
    volumes:
      - type: bind
        source: ../../solr/development/conf/
        target: /solrconfig/
        read_only: true
    command: ["solr-precreate", "test", "/solrconfig"]
    networks:
      - backend

  db:
    image: postgres
    environment:
      - POSTGRES_USER=mampf
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - backend

  mailcatcher:
    restart: on-failure:10
    image: dockage/mailcatcher:latest
    networks:
      - backend

  mampf:
    build:
      context: ./../..
      dockerfile: docker/test/Dockerfile
    image: mampf:tests
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: test
      TEST_DATABASE_ADAPTER: postgresql
      TEST_DATABASE_DATABASE: mampf
      TEST_DATABASE_INTERACTIONS: interactions
      TEST_DATABASE_USERNAME: mampf
      TEST_DATABASE_HOST: db
      TEST_DATABASE_PORT: 5432
      MAILSERVER: mailcatcher
      FROM_ADDRESS: development@localhost
      URL_HOST: mampf
      URL_HOST_SHORT: mampf
      SECRET_KEY_BASE: testenvironment
      ERDBEERE_SERVER: https://erdbeere.mathi.uni-heidelberg.de
      ERDBEERE_API: https://erdbeere.mathi.uni-heidelberg.de/api/v1
      MUESLI_SERVER: https://muesli.mathi.uni-heidelberg.de
      PROJECT_EMAIL: project@localhost
      FEEDBACK_EMAIL: feedback@localhost
      PROJECT_NOTIFICATION_EMAIL: project+notification@localhost
      ERROR_EMAIL: mampf-error@localhost
      MEDIA_FOLDER: mampf
      REDIS_URL: redis://redis:6379/1
      SOLR_HOST: solr
      SOLR_PORT: 8983
      SOLR_PATH: /solr/test
      SPROCKETS_CACHE: /cache
      BLOG: https://mampf.blog
    volumes:
      - ../../:/usr/src/app/
      - ../../coverage:/usr/src/app/coverage/
      - "/usr/src/app/public/"
    depends_on:
      - db
      - solr
      - redis
      - mailcatcher
    networks:
      - backend
      - frontend

  # Some tips for the Cypress docker setup can be found here:
  # https://www.cypress.io/blog/2019/05/02/run-cypress-with-a-single-docker-command
  cypress:
    depends_on:
      - mampf
    build:
      context: ./../..
      dockerfile: docker/test/Dockerfile_cypress
    environment:
      CYPRESS_baseUrl: http://mampf:3000
    entrypoint: bash -c "while ! curl -s $$CYPRESS_baseUrl > /dev/null; do echo waiting for MaMpf to come online at $$CYPRESS_baseUrl; sleep 1; done;"
    volumes:
      - ../../.config/.cypress.js:/mampf-tests/cypress.config.js:ro
      - ../../spec/cypress/e2e/:/mampf-tests/cypress/e2e/:ro
      - ../../spec/cypress/support/:/mampf-tests/cypress/support/:ro
      - ../../spec/cypress/fixtures/:/mampf-tests/cypress/fixtures/:ro
      # Cypress video/screenshot output (only necessary locally)
      - ../../cypress/videos/:/mampf-tests/cypress/videos/
      - ../../cypress/screenshots/:/mampf-tests/cypress/screenshots/
    networks:
      - frontend
      - backend