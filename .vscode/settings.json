{
    "editor.formatOnSave": false, // autosave configured via options below
    ///////////////////////////////////////
    // ESLint: JS, HTML & ERB
    ///////////////////////////////////////
    // https://eslint.style/guide/faq#how-to-auto-format-on-save
    // https://github.com/microsoft/vscode-eslint#settings-options
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit"
    },
    "eslint.format.enable": true,
    "eslint.options": {
        "overrideConfigFile": ".config/eslint.mjs"
    },
    "eslint.validate": [
        "javascript",
        "html",
        "erb",
    ],
    "[javascript]": {
        // ESLint's autosave is instead configured via code action on save
        "editor.formatOnSave": false,
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "editor.indentSize": 2,
        "editor.tabSize": 2,
    },
    // Disable VSCode-native JS validation since our JS files might include
    // ERB syntax, that would otherwise be flagged as invalid
    "javascript.validate.enable": false,
    "[html]": {
        // ESLint's autosave is instead configured via code action on save
        "editor.formatOnSave": false,
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "editor.indentSize": 2,
        "editor.tabSize": 2,
    },
    "[erb]": {
        // ESLint's autosave is instead configured via code action on save
        "editor.formatOnSave": false,
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "editor.indentSize": 2,
        "editor.tabSize": 2,
    },
    "emeraldwalk.runonsave": {
        "autoClearConsole": true,
        "commands": [
            {
                "match": "\\.(html|text|js).erb$",
                "cmd": "just lint erb ${file}",
                "isAsync": true
            }
        ]
    },
    //////////////////////////////////////
    // Ruby (Rubocop)
    //////////////////////////////////////
    "[ruby]": {
        "editor.defaultFormatter": "Shopify.ruby-lsp",
        "editor.formatOnSave": true,
        "editor.indentSize": 2,
        "editor.tabSize": 2,
    },
    "rubyLsp.formatter": "rubocop",
    "rubyLsp.rubyVersionManager": {
        "identifier": "rbenv"
    },
    "rubyLsp.enabledFeatures": {
        "codeActions": true,
        "diagnostics": true,
        "documentHighlights": true,
        "documentLink": true,
        "documentSymbols": true,
        "foldingRanges": true,
        "formatting": true,
        "hover": true,
        "inlayHint": true,
        "onTypeFormatting": true,
        "selectionRanges": true,
        "semanticHighlighting": true,
        "completion": true,
        "codeLens": true,
        "definition": true
    },
    //////////////////////////////////////
    // Ruby Test Explorer
    //////////////////////////////////////
    "rubyTestExplorer.testFramework": "rspec",
    "rubyTestExplorer.rspecCommand": "python3 ./spec/rspec_inside_docker.py",
    "rubyTestExplorer.rspecDirectory": "./spec/",
    "rubyTestExplorer.logpanel": true,
    "rubyTestExplorer.filePattern": [
        "*_spec.rb"
    ],
    //////////////////////////////////////
    // Files
    //////////////////////////////////////
    "files.exclude": {
        "node_modules/": false,
        "pdfcomprezzor/": true,
        "coverage/": true,
        "solr/": true,
        ".docker/": true
    },
    "files.associations": {
        "*.erb": "erb",
        // With this option, we loose syntax highlighting for the Ruby part
        // in .js.erb files. Linting of the Ruby part in these files still works
        // via the "emeraldwalk.runonsave" option above. This is a tradeoff since
        // otherwise, the pure JavaScript part in .js.erb files is not properly
        // syntax highlighted (although still linted). Luckily, we don't have
        // too many .js.erb files (mostly purely .js files).
        // .html.erb files are treated as ERB language and HTML syntax
        // highlighting works fine there.
        "*.js.erb": "javascript",
        "*.coffee.erb": "coffeescript" // currently only for 1 single file
    },
    // due to "emeraldwalk.runonsave" option above, which calls an external
    // script and needs some time to finish
    "files.saveConflictResolution": "overwriteFileOnDisk",
    //////////////////////////////////////
    // Editor
    //////////////////////////////////////
    "editor.detectIndentation": false,
    "editor.renderFinalNewline": "on",
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100, // toggle via Alt + Z shortcut
    "editor.mouseWheelZoom": true,
    "editor.rulers": [
        {
            "column": 80, // soft limit
            "color": "#e5e5e5"
        },
        {
            "column": 100, // hard limit
            "color": "#c9c9c9"
        }
    ],
    //////////////////////////////////////
    // Git
    //////////////////////////////////////
    "git.inputValidation": true,
    "git.inputValidationSubjectLength": 50,
    "git.inputValidationLength": 72,
    //////////////////////////////////////
    // Spell Checker
    //////////////////////////////////////
    "cSpell.enabled": true,
    "cSpell.ignorePaths": [
        "node_modules",
        ".git"
    ],
    "cSpell.language": "en,de",
    "cSpell.words": [
        "activerecord",
        "ajax",
        "autocorrect",
        "buildcache",
        "cicd",
        "commontator",
        "cospeaker",
        "cospeakers",
        "datetime",
        "dockerfiles",
        "Erdbeere",
        "factorybot",
        "helpdesk",
        "justfile",
        "katex",
        "lightgray",
        "localroot",
        "mailcatcher",
        "mampf",
        "mampftest",
        "pdfcomprezzor",
        "pgadmin",
        "preseed",
        "preseeds",
        "preselection",
        "Rubocop",
        "psql",
        "realpath",
        "selectize",
        "Timecop",
        "turbolinks",
        "uncached",
        "Unsets",
        "Unsets",
        "webpacker",
        "whitespaces"
    ],
    "cSpell.enableFiletypes": [
        "ruby"
        // Other filetypes are handled by the default spell checker
    ],
    "cSpell.maxNumberOfProblems": 10000
}