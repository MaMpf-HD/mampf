<div class="card bg-mdb-color-lighten-5">
  <div class="card-header bg-mdb-color-lighten-3">
    <h5>
      <%= t('basics.basics') %>
    </h5>
  </div>
  <div class="card-body <%= compact ? 'card-compact' : 'card-xl' %>">
    <div class="mb-3">
      <%= f.label :sort, t('admin.medium.sort'),
                  class: "form-label" %>
      <%= helpdesk(t('admin.medium.info.sort'), true) %>
      <%= f.select :sort,
                   options_for_select(medium.select_sorts_with_self, medium.sort),
                   {},
                   { class: 'form-control',
                     disabled: medium.sort.in?(['Script', 'Quiz',
                                                'Question', 'Remark']) }%>
      <div class="invalid-feedback"
           id="medium-sort-error">
      </div>
      <div id="mampfStyInfo" class="mt-2"
           style="display: <%= show(medium.sort == 'Script') %>">
        <%= t('admin.medium.info.latex_package_html',
              package: link_to(t('basics.mampf_package'),
                               'https://github.com/MaMpf-HD/mampf-sty/releases/'
                               )) %>
      </div>
    </div>
    <% if medium.sort.in?(['Script', 'Quiz', 'Question', 'Remark']) %>
      <%= f.hidden_field :sort,
                         value: medium.sort,
                         id: 'medium_sort_backup' %>
    <% end %>
    <% if current_user.admin || current_user.editor? %>
      <div class="mb-3">
        <%= f.label :teachable, t('basics.associated_to'),
                    class: "form-label" %>
        <%= helpdesk(t('admin.medium.info.teachable'), true) %>
        <%= f.select :teachable,
                     options_for_select([[medium.teachable&.title_for_viewers,
                                          medium.teachable_select]],
                                        medium.teachable_select),
                     { prompt: t('basics.select') },
                     { class: 'selectize',
                       style: 'display: none;',
                       disabled: medium.sort == 'Script',
                      data: { ajax: medium.sort != 'Script',
                              model: 'teachable',
                              filled: false } } %>
        <div class="invalid-feedback"
             id="medium-teachable-error">
        </div>
      </div>
    <% end %>
    <div class="mb-3">
      <%= f.label :editor_ids,
                  t('basics.editors'),
                  class: "form-label" %>
      <%= helpdesk(t('admin.medium.info.editors'), true) %>
      <% if current_user.admin || current_user.editor? %>
        <%= f.select :editor_ids,
                     options_for_select(add_prompt(medium.editors
                                                         .map { |e| [e.info, e.id] }),
                                        medium.editors.map(&:id)),
                     {},
                     { multiple: true,
                       class: 'selectize',
                       style: 'display: none;',
                       data: { ajax: true,
                               filled: false,
                               model: 'user',
                               placeholder: t('basics.enter_two_letters'),
                               no_results: t('basics.no_results') } } %>
      <% else %>
        <%= f.select :editor_ids,
                     options_for_select((medium.teachable.speakers | medium.editors).map { |e| [e.info, e.id] },
                                        medium.editors.map(&:id)),
                     {},
                     { multiple: true,
                       class: 'selectize',
                       style: 'display: none;',
                       data: { ajax: false } } %>
      <% end %>
      <div class="invalid-feedback"
           id="medium-editors-error">
      </div>
    </div>
    <div class="mb-3">
      <%= f.label :description, t('basics.title'),
                  class: "form-label" %>
      <%= helpdesk(t('admin.medium.info.description'), false) %>
      <%= f.text_field :description,
                       class: 'form-control' %>
      <div class="invalid-feedback"
           id="medium-description-error">
      </div>
    </div>
    <% unless medium.sort == 'Script' %>
    <div class="mb-3">
      <%= f.label :tag_ids,
                  t('basics.related_tags'),
                  class: "form-label" %>
      <%= helpdesk(t('admin.medium.info.related_tags'), false) %>
      <% if current_user.admin || current_user.editor? %>
        <a class="fas fa-plus-circle clickable text-dark"
           id="new-tag-button"
           data-toggle="tooltip"
           title="<%= t('admin.tag.create') %>"
           data-course="<%= medium.course.id %>"
           data-medium="<%= medium.id %>"
          data-from="medium">
        </a>
      <% end %>
      <%= f.select :tag_ids,
                   options_for_select(medium.tags.map { |t| [t.extended_title, t.id] },
                                      medium.tags.map(&:id)),
                   {},
                   { multiple: true,
                     class: 'selectize',
                     style: 'display: none;',
                     data: { ajax: true,
                             filled: false,
                             model: 'tag',
                             locale: I18n.locale,
                             placeholder: t('basics.enter_two_letters'),
                             no_results: t('basics.no_results') } } %>
      <div class="invalid-feedback"
           id="medium-tags-error">
      </div>
    </div>
    <% end %>
    <% if current_user.admin || current_user.editor? %>
      <div class="mb-3">
        <%= f.label :linked_medium_ids,
                    t('basics.related_media'),
                    class: "form-label" %>
        <%= helpdesk(t('admin.medium.info.linked_media'), true) %>
        <%= f.select :linked_medium_ids,
                     options_for_select(medium.linked_media
                                              .map{ |m| [m.title_for_viewers,
                                                         m.id] },
                                        medium.linked_media.pluck(:id)),
                     {},
                     { multiple: true,
                       class: 'selectize',
                      data: { ajax: true,
                              model: 'medium',
                              filled: false,
                              placeholder: t('basics.enter_two_letters'),
                              no_results: t('basics.no_results') } } %>
      </div>
    <% end %>
    <% if medium.published? %>
      <%= render partial: 'media/access_rights',
                 locals: { f: f,
                 medium: medium } %>
      <div class="custom-control form-check mb-2">
        <%= f.check_box :comments_locked,
                         class: 'form-check-input',
                         checked:  medium.commontator_thread.is_closed? %>
        <%= f.label :comments_locked,
                    t('admin.medium.comments_locked'),
                    { class: 'custom-control-label' } %>
      </div>
    <% end %>
    <div class="mb-3">
      <%= t('basics.language') %>
      <%= helpdesk(t('admin.medium.info.language'), false) %>
      <div class="row ms-2">
        <% I18n.available_locales.each do |locale| %>
          <div class="custom-control custom-radio custom-control-inline">
            <%= f.radio_button :locale,
                               locale.to_s,
                               class: 'form-check-input' %>
            <%= f.label :locale,
                        t('locales.' + locale.to_s),
                        value: locale.to_s,
                        class: 'custom-control-label' %>
          </div>
        <% end %>
      </div>
    </div>
    <% if current_user.admin || current_user.editor? %>
      <div class="mb-3">
        <%= t('admin.medium.boost') %>
        <%= helpdesk(t('admin.medium.info.boost'), false) %>
        <%= f.text_field :boost,
                         class: 'form-control' %>
      </div>
    <% end %>
    <%= f.hidden_field :teachable_id, value: medium.teachable_id %>
    <%= f.hidden_field :teachable_type, value: medium.teachable_type %>
  </div>
</div>
