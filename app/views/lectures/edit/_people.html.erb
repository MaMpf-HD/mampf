<% if current_user.can_update_personell?(lecture) %>
  <%= form_with model: lecture, html: { id: 'lecture-form' } do |f| %>
    <div class="row">
      <h3 class="lecture-pane-header"><%= t('basics.people') %></h3>

      <div class="col-6 mb-3">
        <% if current_user.admin? %>
          <div id="lecture_teacher_select" data-cy="teacher-admin-select" %>
            <%= f.label :teacher_id,
                        t('basics.teacher'),
                        class: "form-label" %>
            <%= helpdesk(t('admin.lecture.info.teacher'), false) %>
            <%= f.select :teacher_id,
                         options_for_select([[lecture.teacher.info,
                         lecture.teacher.id]],
                         lecture.teacher.id),
                         {},
                         { class: 'selectize',
                           data: { ajax: true,
                                   model: 'user',
                                   filled: false,
                                   placeholder:
                                     t('basics.enter_two_letters'),
                                   no_results:
                                   t('basics.no_results') } } %>
            <div class="invalid-feedback" id="lecture-teacher-error">
            </div>
          </div>
        <% else %>
          <p>
          <%= t('basics.teacher') %>
          <%= helpdesk(t('admin.lecture.info.teacher_fixed'), false) %>
          </p>
          <p data-cy="teacher-info">
            <%= lecture.teacher.info %>
          </p>
        <% end %>
      </div>

      <div class="col-6 mb-3">
        <%= f.label :editor_ids,
                    t('basics.lecture_editors'),
                  class: "form-label" %>
        <%= helpdesk(t('admin.lecture.info.lecture_editors'), false) %>
        <div id="lecture_editors_select" data-cy="editor-select" %>
          <% if current_user.admin? %>
              <%= f.select :editor_ids,
                        options_for_select(lecture.select_editors,
                                          lecture.editors.map(&:id)),
                        {},
                        { multiple: true,
                          class: 'selectize',
                          data: { ajax: true,
                                  model: 'user',
                                  filled: false,
                                  placeholder: t('basics.enter_two_letters'),
                                  no_results: t('basics.no_results') } } %>
          <% else %>
            <%= f.select :editor_ids,
                        editors_preselection(lecture),
                        {},
                        { multiple: true,
                          class: 'selectize',
                          data: { cy: 'lecture-editors-select'} } %>
          <% end %>
        </div>
      </div>

    </div>
    <div class="row mb-3">
      <div class="col-12">
        <%= t('basics.subscribers_count_nc') %>
        <span id="lectureUserCounter">
          <%= lecture.users.count %>
        </span>
        <%= helpdesk(t('admin.lecture.info.subscribers_count'), false) %>
        <% if lecture.users.any? && !lecture.stale? %>
          <button type="button"
                  id="lectureUserModalButton"
                  class="ms-3 btn btn-outline-primary btn-sm"
                  data-bs-toggle="modal"
                  data-bs-target="#lectureUserModal">
            <%= t('basics.details') %>
          </button>
        <% end %>
      </div>
    </div>

    <!-- Unsaved changes -->
    <div class="col-12 text-center" id="lecture-basics-warning">
      <%= t('warnings.unsaved_changes') %>
      <%= hidden_field_tag :subpage, "people" %>
      <%= f.submit t('buttons.save'),
          class: "btn btn-sm btn-primary" %>
      <button type="button"
              class="btn btn-sm btn-secondary ms-2"
              id="lecture-basics-cancel"
              data-id="<%= lecture.id %>">
        <%= t('buttons.discard') %>
      </button>
    </div>
  <% end %>
<% else %>
  <%= t('admin.lecture.no_access_to_users_html',
        project_mail: mail_to(DefaultSetting::PROJECT_EMAIL, nil)) %>
<% end %>
